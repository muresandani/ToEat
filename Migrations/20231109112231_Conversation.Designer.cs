// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToEat.Data;

#nullable disable

namespace ToEat.Migrations
{
    [DbContext(typeof(ToEatContext))]
    [Migration("20231109112231_Conversation")]
    partial class Conversation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("ToEat.Models.Conversation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Conversation");
                });

            modelBuilder.Entity("ToEat.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConversationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("ToEat.Models.PromptElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PromptElement");

                    b.HasDiscriminator<string>("Discriminator").HasValue("PromptElement");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ToEat.Models.PromptElementParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PromptElementId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PromptElementId");

                    b.ToTable("PromptElementParameter");
                });

            modelBuilder.Entity("ToEat.Models.BasePromptElement", b =>
                {
                    b.HasBaseType("ToEat.Models.PromptElement");

                    b.HasDiscriminator().HasValue("BasePromptElement");
                });

            modelBuilder.Entity("ToEat.Models.MetaPromptElement", b =>
                {
                    b.HasBaseType("ToEat.Models.PromptElement");

                    b.HasDiscriminator().HasValue("MetaPromptElement");
                });

            modelBuilder.Entity("ToEat.Models.OptionalPromptElement", b =>
                {
                    b.HasBaseType("ToEat.Models.PromptElement");

                    b.HasDiscriminator().HasValue("OptionalPromptElement");
                });

            modelBuilder.Entity("ToEat.Models.Message", b =>
                {
                    b.HasOne("ToEat.Models.Conversation", null)
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ToEat.Models.PromptElementParameter", b =>
                {
                    b.HasOne("ToEat.Models.PromptElement", "PromptElement")
                        .WithMany("Parameters")
                        .HasForeignKey("PromptElementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PromptElement");
                });

            modelBuilder.Entity("ToEat.Models.Conversation", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ToEat.Models.PromptElement", b =>
                {
                    b.Navigation("Parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
